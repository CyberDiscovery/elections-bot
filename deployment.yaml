apiVersion: "v1"
kind: "Service"
metadata:
  name: "postgres-elections"
  labels:
    app: "postgres-elections"
spec:
  ports:
  - port: 5432
    name: "postgres-elections"
  clusterIP: "None"
  selector:
    app: "postgres-elections"
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv-volume
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-elections-pv-claim
  labels:
    app: postgres-elections
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "postgres-elections"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "postgres-elections"
  template:
    metadata:
      labels:
        app: "postgres-elections"
    spec:
      containers:
      - name: "postgres-elections"
        image: "postgres:latest"
        volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-elections
        env:
        - name: "POSTGRES_DB"
          valueFrom:
            secretKeyRef:
              name: "creds-elections"
              key: "PGDATABASE"
        - name: "POSTGRES_USER"
          valueFrom:
            secretKeyRef:
              name: "creds-elections"
              key: "PGUSER"
        - name: "POSTGRES_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "creds-elections"
              key: "PGPASSWORD"
        ports:
        - containerPort: 5432
          name: postgres-elections
      volumes:
        - name: postgres-elections
          persistentVolumeClaim:
            claimName: postgres-elections-pv-claim
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "electionsbot"
  namespace: "default"
  labels:
    app: "electionsbot"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "electionsbot"
  template:
    metadata:
      labels:
        app: "electionsbot"
    spec:
      containers:
      - name: "electionsbot"
        image: "cyberdiscovery/electionsbot:latest"
        env:
        - name: "BOT_TOKEN"
          valueFrom:
            secretKeyRef:
              name: "creds"
              key: "BOT_TOKEN"
        - name: "PGHOST"
          value: "postgres-elections"
        - name: "PGPORT"
          valueFrom:
            secretKeyRef:
              name: "creds-elections"
              key: "PGPORT"
        - name: "PGDATABASE"
          valueFrom:
            secretKeyRef:
              name: "creds-elections"
              key: "PGDATABASE"
        - name: "PGUSER"
          valueFrom:
            secretKeyRef:
              name: "creds-elections"
              key: "PGUSER"
        - name: "PGPASSWORD"
          valueFrom:
            secretKeyRef:
              name: "creds-elections"
              key: "PGPASSWORD"
