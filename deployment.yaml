apiVersion: "v1"
kind: "Service"
metadata:
  name: "elections-db"
  labels:
    app: "elections-db"
spec:
  ports:
  - port: 5432
    name: "elections-db"
  clusterIP: "None"
  selector:
    app: "elections-db"
---
#kind: PersistentVolume
#apiVersion: v1
#metadata:
#  name: elections-volume
#  labels:
#    type: local
#    app: postgres
#spec:
#  storageClassName: default
#  capacity:
#    storage: 5Gi
#  accessModes:
#    - ReadWriteMany
#  hostPath:
#    path: "/mnt/data"
#---
#kind: PersistentVolumeClaim
#apiVersion: v1
#metadata:
#  name: elections-claim
#  labels:
#    app: postgres
#spec:
#  storageClassName: default
#  accessModes:
#    - ReadWriteMany
#  resources:
#    requests:
#      storage: 5Gi
#---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: elections-db
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: elections-db
          image: postgres:11
          env:
          - name: "POSTGRES_DB"
            valueFrom:
              secretKeyRef:
                name: "creds-elections"
                key: "PGDATABASE"
          - name: "POSTGRES_USER"
            valueFrom:
              secretKeyRef:
                name: "creds-elections"
                key: "PGUSER"
          - name: "POSTGRES_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: "creds-elections"
                key: "PGPASSWORD"
          ports:
          - containerPort: 5432
            name: elections-db
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: elections-claim
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "electionsbot"
  namespace: "default"
  labels:
    app: "electionsbot"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "electionsbot"
  template:
    metadata:
      labels:
        app: "electionsbot"
    spec:
      containers:
      - name: "electionsbot"
        image: "cyberdiscovery/electionsbot:latest"
        env:
        - name: "BOT_TOKEN"
          valueFrom:
            secretKeyRef:
              name: "creds"
              key: "BOT_TOKEN"
        - name: "PGHOST"
          value: "elections-db"
        - name: "PGPORT"
          valueFrom:
            secretKeyRef:
              name: "creds-elections"
              key: "PGPORT"
        - name: "PGDATABASE"
          valueFrom:
            secretKeyRef:
              name: "creds-elections"
              key: "PGDATABASE"
        - name: "PGUSER"
          valueFrom:
            secretKeyRef:
              name: "creds-elections"
              key: "PGUSER"
        - name: "PGPASSWORD"
          valueFrom:
            secretKeyRef:
              name: "creds-elections"
              key: "PGPASSWORD"
